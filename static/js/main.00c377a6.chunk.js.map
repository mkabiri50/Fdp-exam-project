{"version":3,"sources":["Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Navigation/NavigationItems/NavigationItem/NavigationItem.js","Navigation/NavigationItems/NavigationItems.js","Navigation/Toolbar/Toolbar.js","Navigation/Backdrop/Backdrop.js","Navigation/SideDrawer/SideDrawer.js","Components/Rec.js","Components/Arc.js","Components/Win3.js","App.js","serviceWorker.js","index.js"],"names":["draewrToggle","props","className","onClick","clicked","navigationItem","to","link","exact","activeClassName","children","navigationItems","toolbar","drawerToggleclicked","bachdrop","show","sideDrawer","attachedClasses","open","Fragment","closed","join","Rec","state","scales","w","value","h","t","origin","window","innerWidth","innerHeight","handleClick","id","alert","this","width","height","x","y","points","stroke","strokeWidth","lineJoin","fill","Component","Arcwin","console","log","radius","angle","rotation","innerRadius","outerRadius","offset","clockwise","Win3","Math","sqrt","sceneFunc","context","shape","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fillStrokeShape","App","showSD","sdCloseHandler","setState","sdToggleHandler","prevState","path","component","Arc","Boolean","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00c377a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport  './DrawerToggle.css'\r\nconst draewrToggle = (props) => (\r\n    <div className='DrawerToggle' onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\nexport default draewrToggle;","import React  from 'react';\r\nimport './NavigationItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\nconst navigationItem =(props) =>(\r\n   <li className='NavigationItem'> \r\n       <NavLink \r\n        to ={props.link} \r\n        exact\r\n        activeClassName='active'>\r\n      {props.children }</NavLink>\r\n   </li>\r\n);\r\nexport default navigationItem;  ","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className='NavigationItems'>\r\n        <NavigationItem link='/' exact={props.exact}> UNIT-1</NavigationItem>\r\n        <NavigationItem link='/UNIT-2' > UNIT-2 </NavigationItem> \r\n       <NavigationItem link='/UNIT-3' > UNIT-3 </NavigationItem>\r\n    </ul>\r\n\r\n);\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport './Toolbar.css';\r\n\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport NavigationItems from './../NavigationItems/NavigationItems';\r\nconst toolbar = (props) => (\r\n    <header className='Toolbar'>\r\n      <DrawerToggle clicked={props.drawerToggleclicked} />\r\n        <nav className='DesktopOnly'>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\nimport  './Backdrop.css';\r\nconst bachdrop = (props) => (\r\n   props.show ? <div className = 'Backdrop' onClick = {props.clicked} > </div> : null\r\n);\r\nexport default bachdrop;\r\n","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n\r\nimport  './SideDrawer.css';\r\nimport Bachdrop from '../Backdrop/Backdrop';\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer','Close'];\r\n    if (props.open) {\r\n        attachedClasses = ['SideDrawer','Open']\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Bachdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}\r\n            onClick={props.closed}>\r\n    \r\n                <nav >\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nexport default sideDrawer;\r\n","import React, { Component } from 'react';\r\nimport { Stage, Layer, Rect, Line, } from 'react-konva';\r\nclass Rec extends Component {\r\n    state = {\r\n        scales: {\r\n            w: {\r\n                value: 500\r\n            },\r\n            h: {\r\n                value: 200\r\n            },\r\n            t: {\r\n                value: 10\r\n            },\r\n        },\r\n\r\n        origin: [window.innerWidth / 2, window.innerHeight / 2]\r\n\r\n    }\r\n   \r\n    handleClick = (id) => {\r\n        alert('element :' + id)\r\n    };\r\n\r\n    render() {\r\n        const w = this.state.scales.w.value\r\n        const h = this.state.scales.h.value\r\n        const t = this.state.scales.t.value\r\n        return (\r\n         \r\n         \r\n\r\n\r\n                <Stage width={window.innerWidth} height={window.innerHeight}>\r\n                    <Layer>\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n\r\n            \r\n                            points={[-w / 2, -h / 2, w / 2, -h / 2, w / 2 - t, -h / 2 + t, -w / 2 + t, -h / 2 + t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n                            lineJoin='miter'\r\n                            onClick={() => this.handleClick(1)}\r\n                            fill='#eee'\r\n                        />\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[w / 2, -h / 2, w / 2, h / 2, w / 2 - t, h / 2 - t, w / 2 - t, -h / 2 + t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(2)}\r\n                            fill='#eee'\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[(w / 2), (h / 2), (-w / 2), (h / 2), (-w / 2) + t, (h / 2) - t, (w / 2) - t, (h / 2) - t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(3)}\r\n                            fill='#eee'\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[(-w / 2), h / 2, (-w / 2), (-h / 2), (-w / 2) + t, (-h / 2) + t, (-w / 2) + t, (h / 2) - t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(4)}\r\n                            fill='#eee'\r\n                        />\r\n                        <Rect\r\n                            x={this.state.origin[0] - w / 2 + t}\r\n                            y={this.state.origin[1] - h / 2 + t}\r\n\r\n                            width={(w - 2 * t)}\r\n                            height={(h - 2 * t)}\r\n                            fill='#8FD4F1'\r\n                        />\r\n\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n\r\n\r\n                            points={[(-w / 2) + t, (-h / 2) + t, (w / 2) - t, (-h / 2) + t, (w / 2) - t * 1.3, (-h / 2) + t * 1.3, (-w / 2) + t * 1.3, (-h / 2) + t * 1.3]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n                            lineJoin='miter'\r\n                            onClick={() => this.handleClick(1)}\r\n                            fill='#eee'\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[w / 2 - t, -h / 2 + t, w / 2 - t, h / 2 - t, w / 2 - t * 1.3, h / 2 - t * 1.3, w / 2 - t * 1.3, -h / 2 + t*1.3]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(2)}\r\n                            fill='#eee'\r\n                        />\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[(w / 2)-t, (h / 2)-t, (-w / 2)+t, (h / 2)-t, (-w / 2) + t*1.3, (h / 2) - t*1.3, (w / 2) - t*1.3, (h / 2) - t*1.3]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(3)}\r\n                            fill='#eee'\r\n                        />\r\n                   <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[(-w / 2)+t, h / 2-t, (-w / 2)+t, (-h / 2)+t, (-w / 2) + t*1.3, (-h / 2) + t*1.3, (-w / 2) + t*1.3, (h / 2) - t*1.3]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n                            lineJoin='miter'\r\n\r\n                            onClick={() => this.handleClick(4)}\r\n                            fill='#bbb'\r\n                        />\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n\r\n                            points={[-10, 0, 10, 0]}\r\n                            stroke='#2A8AE1'\r\n                            strokeWidth={1}\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[0, - 10, 0, 10]}\r\n                            stroke='#2A8AE1'\r\n                            strokeWidth={1}\r\n                        />\r\n                    </Layer>\r\n                </Stage>\r\n           \r\n        );\r\n    }\r\n}\r\nexport default Rec;","import React, { Component } from 'react';\r\nimport { Stage, Layer, Rect, Text, Circle, Line, Wedge, Arc } from 'react-konva';\r\nclass Arcwin extends Component {\r\n    state = {\r\n        scales: {\r\n            w: {\r\n                value: 500\r\n            },\r\n           \r\n            t: {\r\n                value: 10\r\n            },\r\n        },\r\n\r\n        origin: [window.innerWidth / 2, window.innerHeight / 2]\r\n    }\r\n        \r\n\r\n   \r\n    handleClick = (id) => {\r\n        alert('element :' + id)\r\n    };\r\n    render() {\r\n        console.log(this.state)\r\n        const w = this.state.scales.w.value;\r\n        const t = this.state.scales.t.value;\r\n        return (\r\n         \r\n     \r\n                <Stage width={window.innerWidth} height={window.innerHeight}>\r\n                    <Layer>\r\n                    <Wedge\r\n                            x={this.state.origin[0] - w / 2 + t}\r\n                            y={this.state.origin[1] + w / 2 - t}\r\n                           radius= {w-2*t}\r\n                           angle= {90}\r\n                           fill= '#8FD4F1'\r\n                           stroke= 'black'\r\n                           strokeWidth= {1}\r\n                           rotation= {-90} />\r\n                        <Arc\r\n                            x={this.state.origin[0] - w / 2}\r\n                            y={this.state.origin[1] + w / 2}\r\n                            innerRadius={w - t}\r\n                            outerRadius={w}\r\n                            angle={-90}\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n                            offset\r\n                            clockwise\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(1)}\r\n                        />\r\n                         <Arc\r\n                            x={this.state.origin[0] - w / 2}\r\n                            y={this.state.origin[1] + w / 2}\r\n                            innerRadius={w - t*1.3}\r\n                            outerRadius={w-t}\r\n                            angle={-90}\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n                            offset\r\n                            clockwise\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(1)}\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[w / 2, w / 2, -w / 2, w / 2, -w / 2 + t, w / 2 - t, w / 2 - t, w / 2 - t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(2)}\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[-w/2,-w/2, -w/2+t,-w/2+t, -w/2+t,w/2-t, -w/2,w/2]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={1}\r\n\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(3)}\r\n                        />\r\n                     \r\n\r\n\r\n                    \r\n                     <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[w / 2-t, w / 2-t, -w / 2+t, w / 2-t, -w / 2 + t*1.3, w / 2 - t*1.3, w / 2 - t*1.3, w / 2 - t*1.3]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(2)}\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[-w/2+t,-w/2+t, -w/2+t*1.3,-w/2+t*1.3, -w/2+t*1.3,w/2-t*1.3, -w/2+t,w/2-t]}\r\n                            closed\r\n                            stroke='black'\r\n                            strokeWidth={.5}\r\n\r\n                            fill='#eee'\r\n                            onClick={() => this.handleClick(3)}\r\n                        />\r\n\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n\r\n                            points={[-10, 0, 10, 0]}\r\n                            stroke='#2A8AE1'\r\n                            strokeWidth={1}\r\n                        />\r\n                        <Line\r\n                            x={this.state.origin[0]}\r\n                            y={this.state.origin[1]}\r\n                            points={[0, - 10, 0, 10]}\r\n                            stroke='#2A8AE1'\r\n                            strokeWidth={1}\r\n                        />\r\n              </Layer>\r\n                </Stage>\r\n          \r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arcwin;","import React, { Component } from 'react';\r\nimport { Stage, Layer, Line, Arc, Wedge, Shape } from 'react-konva'\r\nclass Win3 extends Component {\r\n    state = {\r\n        scales: {\r\n            w: {\r\n                value: 500\r\n            },\r\n            t: {\r\n                value: 10\r\n            },\r\n        },\r\n\r\n        origin: [window.innerWidth / 2, window.innerHeight / 2]\r\n\r\n    }\r\n\r\n    handleClick = (id) => {\r\n        alert('element :' + id)\r\n    };\r\n\r\n    render() {\r\n        const w = this.state.scales.w.value;\r\n        const t = this.state.scales.t.value;\r\n        const h = (w * Math.sqrt(3) / 2 - w / 2) * 2\r\n        const origin = [window.innerWidth / 2, window.innerHeight / 2]\r\n        return (\r\n\r\n            <Stage width={window.innerWidth} height={window.innerHeight}>\r\n                <Layer>\r\n                    <Shape\r\n                        sceneFunc={(context, shape) => {\r\n                            context.beginPath();\r\n                            context.moveTo(origin[0] + (-w / 2), origin[1] + (-h / 2));\r\n                            context.lineTo(origin[0] + (-w / 2) + t, origin[1] + (-h / 2) + t / Math.sqrt(3));\r\n                            context.quadraticCurveTo(origin[0], origin[1] - w / 2 + t, origin[0] + w / 2 - t, origin[1] - h / 2 + t / Math.sqrt(3));\r\n                            context.lineTo(origin[0] + w / 2, origin[1] + (-h / 2));\r\n                            context.quadraticCurveTo(origin[0], origin[1] - w / 2, origin[0] + (-w / 2), origin[1] + (-h / 2));\r\n                            context.closePath();\r\n                            context.fillStrokeShape(shape);\r\n                        }}\r\n                        fill=\"#eee\"\r\n                        stroke=\"black\"\r\n                        strokeWidth={1}\r\n                        onClick={() => this.handleClick(1)}\r\n                    />\r\n                  \r\n\r\n\r\n                    <Shape\r\n                        sceneFunc={(context, shape) => {\r\n                            context.beginPath();\r\n                            context.moveTo(origin[0] + (-w / 2) + t, origin[1] + (-h / 2) + t / Math.sqrt(3));\r\n                            context.lineTo(origin[0] + (-w / 2) + t, origin[1] + (+h / 2) - t);\r\n                            context.lineTo(origin[0] + (+w / 2) - t, origin[1] + (+h / 2) - t);\r\n                            context.lineTo(origin[0] + w / 2 - t, origin[1] + (-h / 2) + t / Math.sqrt(3));\r\n                            context.quadraticCurveTo(origin[0], origin[1] - w / 2 + t, origin[0] - w / 2 + t, origin[1] - h / 2 + t / Math.sqrt(3));\r\n                            context.fillStrokeShape(shape);\r\n                        }}\r\n                        fill=\"#8FD4F1\"\r\n                        stroke=\"black\"\r\n                        strokeWidth={1}\r\n                    />\r\n\r\n<Shape\r\n                        sceneFunc={(context, shape) => {\r\n                            context.beginPath();\r\n                            context.moveTo(origin[0] + (-w / 2+t), origin[1] + (-h / 2)+ t / Math.sqrt(3));\r\n                            context.lineTo(origin[0] + (-w / 2) + t*1.3, origin[1] + (-h / 2) + t*1.3 / Math.sqrt(3));\r\n                            context.quadraticCurveTo(origin[0], origin[1] - w / 2 + t*1.3, origin[0] + w / 2 - t*1.3, origin[1] - h / 2 + t*1.3 / Math.sqrt(3));\r\n                            context.lineTo(origin[0] + w / 2-t, origin[1] + (-h / 2)+t/Math.sqrt(3));\r\n                            context.quadraticCurveTo(origin[0], origin[1] - w / 2+t, origin[0] + (-w / 2)+t, origin[1] + (-h / 2)+t/Math.sqrt(3));\r\n                            context.closePath();\r\n                            context.fillStrokeShape(shape);\r\n                        }}\r\n                        fill=\"#eee\"\r\n                        stroke=\"black\"\r\n                        strokeWidth={.5}\r\n                        onClick={() => this.handleClick(1)}\r\n                    />\r\n                    <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[w / 2, -h / 2, w / 2, h / 2, w / 2 - t, h / 2 - t, w / 2 - t, -h / 2 + t / Math.sqrt(3)]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={1}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(2)}\r\n                        fill='#eee'\r\n                    />\r\n                    <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[w / 2 - t, -h / 2 + t / Math.sqrt(3), w / 2 - t, h / 2 - t / Math.sqrt(3), w / 2 - t * 1.3, h / 2 - t * 1.3, w / 2 - t * 1.3, -h / 2 + t * 1.3 / Math.sqrt(3)]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={.5}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(2)}\r\n                        fill='#eee'\r\n                    />\r\n                    <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[(w / 2), (h / 2), (-w / 2), (h / 2), (-w / 2) + t, (h / 2) - t, (w / 2) - t, (h / 2) - t]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={1}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(3)}\r\n                        fill='#eee'\r\n                    />\r\n                    <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[(w / 2)-t, (h / 2)-t , (-w / 2)+t, (h / 2)-t, (-w / 2) + t*1.3, (h / 2) - t*1.3, (w / 2) - t*1.3, (h / 2) - t*1.3]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={.5}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(3)}\r\n                        fill='#eee'\r\n                    />\r\n                    <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[(-w / 2), h / 2, (-w / 2), (-h / 2), (-w / 2) + t, (-h / 2) + t / Math.sqrt(3), (-w / 2) + t, (h / 2) - t]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={1}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(4)}\r\n                        fill='#eee'\r\n                    />\r\n                      <Line\r\n                        x={origin[0]}\r\n                        y={origin[1]}\r\n                        points={[(-w / 2)+t, h / 2-t, (-w / 2)+t, (-h / 2)+t/ Math.sqrt(3), (-w / 2) + t*1.3, (-h / 2) + t*1.3 / Math.sqrt(3), (-w / 2) + t*1.3, (h / 2) - t*1.3]}\r\n                        closed\r\n                        stroke='black'\r\n                        strokeWidth={.5}\r\n                        lineJoin='miter'\r\n\r\n                        onClick={() => this.handleClick(4)}\r\n                        fill='#eee'\r\n                    />\r\n\r\n                </Layer>\r\n            </Stage>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Win3;","import React, { Component } from 'react';\nimport { Route, Switch, } from 'react-router-dom';\nimport ToolBar from './Navigation/Toolbar/Toolbar';\nimport SideDrawer from './Navigation/SideDrawer/SideDrawer'\nimport Rec from './Components/Rec';\nimport Arc from './Components/Arc';\nimport Win3 from './Components/Win3';\nclass App extends Component {\n  state = {\n    showSD: false\n  }\n  sdCloseHandler = () => {\n    this.setState({ showSD: false });\n  }\n  sdToggleHandler = () => {\n    this.setState((prevState) => {\n      return { showSD: !prevState.showSD };\n    }\n    );\n  }\n  render() {\n    return (\n      <React.Fragment >\n\n        <ToolBar\n          drawerToggleclicked={this.sdToggleHandler} />\n        <SideDrawer\n          open={this.state.showSD}\n          closed={this.sdCloseHandler} />\n        <Switch>\n          <Route path=\"/\" exact component={Rec} />\n          <Route path=\"/UNIT-2\" component={Arc} />\n          <Route path=\"/UNIT-3\" component={Win3} />\n        </Switch>\n\n\n      </React.Fragment>\n\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst app = (\n\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>     \n    \n   )  \n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}